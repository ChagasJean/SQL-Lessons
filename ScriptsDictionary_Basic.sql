/* CÓDIGO PARA A CRIAÇÃO DA DATABASE */
CREATE DATABASE projetoboris;

/* CÓDIGO PARA MOSTRAR AS DATABASES EXISTENTES */
SHOW DATABASES;

/* CÓDIGO PARA MOSTRAR AS TABLES EXISTENTES */
SHOW TABLES;

/* CÓDIGO NECESSÁRIO PARA A ATIVAÇÃO DA DATABASE */
USE projetoboris;

/* CÓDIGO PARA A CRIAÇÃO DE UMA TABELA DENTRO DA DATABASE */
CREATE TABLE familia_boris (
	/* PRIMARY KEY É USADO PARA DEFINIR A VARIÁVEL COMO UMA CHAVE PARA FACILITAR BUSCAS DENTRO DO BANCO DE DADOS */
	ID INT PRIMARY KEY AUTO_INCREMENT, /* ESSE COMANDO SÓ EXISTE NO MYSQL */,
	/* ESSE NOT NULL É PRA CRIAR UMA OBRIGAÇÃO, O USUÁRIO É OBRIGADO A INSERIR UM DADO NESSE CAMPO */
	NOME VARCHAR(30) NOT NULL,
	/* ENUM É USADO PARA CRIAR UMA CAIXA DE OPÇÕES NO FORMULÁRIO */
	SEXO ENUM("M", "F"), /* ESSE COMANDO SÓ EXISTE NO MYSQL */
	ESPECIE VARCHAR(30) NOT NULL,
	IDADE INT(30) NOT NULL
	FUNÇÃO VARCHAR(50) NOT NULL
);

/* ESSA TABLE FOI CRIADA PARA EXPLICAR O USO DA CHAVE ESTRANGEIRA(FOREIGN KEY/FK) */
CREATE TABLE ENDEREÇOS(
	idEndereco INT PRIMARY KEY AUTO_INCREMENTE,
	Rua VARCHAR(50) NOT NULL,
	Bairro VARCHAR(50) NOT NULL,
	Cidade VARCHAR(50) NOT NULL,
	ID_Boris INT UNIQUE, /* Quando for relacionamento 1x1, utilizar UNIQUE para ajudar a classificar */
	FOREIGN KEY(ID_Boris)
	REFERENCES familia_boris(ID)
);

/* CÓDIGO PARA A VISUALIZAÇÃO DA TABELA SELECIONADA */
DESC familia_boris;

/* CÓDIGO PARA FAZER UMA BUSCA COM O FILTRO "F", QUE VAI RETORNAR OS MACACOS FEMÊAS */
SELECT NOME, ESPECIE FROM FAMILIA_BORIS
WHERE SEXO = "F";

/* CÓDIGO UTILIZANDO CARACTER CORINGA % PARA BUSCAR ATRIBUTOS QUE POSSUAM TAL STRING DENTRO DELE */
SELECT NOME, ESPECIE FROM FAMILIA_BORIS
WHERE NOME LIKE "%Boris"

/* CÓDIGOS PARA INSERIR VALORES PARA AS VARIÁVEIS DAS TABELAS - DESSA FORMA TERIA QUE COLOCAR ATRIBUTO POR ATRIBUTO NA TABELA */
INSERT INTO familia_boris(ID, NOME, ESPECIE, IDADE, FUNÇÃO, SEXO) VALUE(1, "Boris Boris", "Babuíno", 12, "Patriarca", "M");
INSERT INTO familia_boris(ID, NOME, ESPECIE, IDADE, FUNÇÃO, SEXO) VALUE(2, "Biluga Boris", "Babuíno", 10, "Matriarca", "F");

/* CÓDIGO PARA INSERIR VARIOS ATRIBUTOS EM UM ÚNICO INSERT, OTIMIZANDO O CÓDIGO */
INSERT INTO familia_boris(ID, NOME, ESPECIE, IDADE, FUNÇÃO, SEXO)
VALUE
(1, "Boris Boris", "Babuíno", 12, "Patriarca", "M"),
(2, "Biluga Boris", "Babuíno", 10, "Matriarca", "F");

/* BLOCO DE CÓDIGO PARA ATUALIZAR DADOS SELECIONADOS DA TABELA */
UPDATE familia_boris
SET NOME = "Batuta"
WHERE ID = 1;

/* BLOCO DE CÓDIGO PARA ADICIONAR A COLUNA SELECIONADA DA TABELA */
ALTER TABLE familia_boris
ADD FUNÇÃO VARCHAR(30);

ALTER TABLE familia_boris
ADD SEXO VARCHAR(1);

/* BLOCO DE CÓDIGO PARA APAGAR A COLUNA SELECIONADA DA TABELA */
ALTER TABLE familia_boris
DROP COLUMN FUNÇÃO;

/* CÓDIGO PARA CONTAR OS REGISTROS DE UMA TABELA */
SELECT COUNT(*) AS "QTD DE REGISTROS - TAB.familia_boris" /* Utilizando o operador AS, é possível nomear a coluna do COUNT */
FROM familia_boris;

/* CÓDIGO PARA AGRUPAR OS REGISTROS E OS MOSTRAS SEPARADOS E CONTADOS DE FORMA DISTINTA */
/* EXEMPLO: Nesse código vai contar o número de registros tem para sexo masculino e feminino */
SELECT SEXO, COUNT(*)
FROM familia_boris
GROUP BY SEXO;

/* CÓDIGO FILTRAR VALORES NULOS */
SELECT NOME, SEXO, ESPECIE FROM familia_boris
WHERE ESPECIE IS NULL;

/* CÓDIGO PARA EXCLUIR UMA TABELA/ENTIDADE */
DROP TABLE familia_boris

/* CÓDIGO PARA EXCLUIR UMA DATABASE */
DROP DATABASE projetoboris;

/* MODELOS DE FK PARA CADA TIPO DE RELACIONAMENTO.
   LEMBRANDO QUE PODE VIR A VARIAR DEPENDENDO DA REGRA DO NEGÓCIO QUE ESTÁ SENDO SEGUIDA*/
CREATE TABLE CLIENTE(
	Id_Cliente INT PRIMARY KEY AUTO_INCREMENT,
	nomeCliente VARCHAR(50) NOT NULL,
	idadeCliente INT NOT NULL,
);

/* Relacionamento 1x1 */
CREATE TABLE ENDERECO(
	Id_Endereco INT PRIMARY KEY AUTO_INCREMENT,
	Rua VARCHAR(50) NOT NULL,
	Bairro VARCHAR(50) NOT NULL,
	Cidade VARCHAR(50) NOT NULL,
	Estado CHAR(2) NOT NULL,
	IdCliente INT UNIQUE,

	FOREIGN KEY(IdClient)
	REFERENCES CLIENTE(Id_Cliente)
);

/* Relacionamento 1xN */
CREATE TABLE TELEFONE(
	id_Tel INT PRIMARY KEY AUTO_INCREMENT,
	numTel VARCHAR(15) NOT NULL,
	tipoTel ENUM("CEL", "RES", "COM") NOT NULL
	IdCliente INT,

	FOREIGN KEY(IdCliente)
	REFERENCES CLIENTE(Id_Cliente)
);

